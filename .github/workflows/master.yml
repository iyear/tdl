name: master builder

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]
    paths-ignore:
      - 'docs/**'

permissions:
  contents: read
  pull-requests: read

jobs:
  lint:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        directory:
          - .
          - core
          - extension
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Golang env
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: false # conflict with golangci-lint cache
      - name: lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v1.54
          working-directory: ${{ matrix.directory }}
  unit-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Golang env
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      - name: Build
        run: go build
      - name: Unit Test
        run: go test -v $(go list ./... | grep -v /test) # skip e2e test
  e2e-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Golang env
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      - name: Install Ginkgo
        run: go install github.com/onsi/ginkgo/v2/ginkgo
      - name: Setup Teamgram Env
        run: |
          git clone https://github.com/iyear/teamgram-server.git
          cd teamgram-server
          git checkout 3cc9864cda9a4eb45b61542494dfe517bf643372
          sudo docker compose -f ./docker-compose-env.yaml up -d --quiet-pull
          sudo docker compose up -d --quiet-pull
      - name: Build
        run: go build
      - name: E2E Test
        run: ginkgo -v -r ./test
